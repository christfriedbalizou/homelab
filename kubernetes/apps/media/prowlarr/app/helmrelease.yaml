---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: prowlarr
  namespace: media
spec:
  interval: 10m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: cloudnative-pg
      namespace: storage
  values:
    controllers:
      main:
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: "OnRootMismatch"
            supplementalGroups:
              - 100
        initContainers:
          01-init-db:
              image:
                repository: ghcr.io/home-operations/postgres-init
                tag: 17
                pullPolicy: IfNotPresent
              env:
                INIT_POSTGRES_DBNAME: prowlarr prowlarr-log
                INIT_POSTGRES_HOST: &postgres postgres-lb.storage.svc.cluster.local
                INIT_POSTGRES_USER:
                  valueFrom:
                    secretKeyRef:
                      name: cluster-media-secrets
                      key: "PROWLARR_0_POSTGRES_USER"
                INIT_POSTGRES_PASS:
                  valueFrom:
                    secretKeyRef:
                      name: cluster-media-secrets
                      key: "PROWLARR_0_POSTGRES_PASSWORD"
                INIT_POSTGRES_SUPER_PASS: "${POSTGRES_SUPER_PASS}"
        containers:
          main:
            image:
              repository: ghcr.io/home-operations/prowlarr
              tag: 2.0.3.5130@sha256:fe167e4a211dac7c049b125d7c5efefaa039e41e57083d17f3e87ffda1966dd0
            env:
              TZ: ${TIMEZONE}
              PROWLARR__AUTH__METHOD: External
              PROWLARR__AUTH__REQUIRED: DisabledForLocalAddresses
              PROWLARR__INSTANCE_NAME: Prowlarr
              PROWLARR__PORT: &port 80
              PROWLARR__LOG_LEVEL: info
              PROWLARR__POSTGRES_HOST: *postgres
              PROWLARR__POSTGRES_MAIN_DB: "prowlarr"
              PROWLARR__POSTGRES_LOG_DB: "prowlarr-log"
              PROWLARR__POSTGRES_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: cluster-media-secrets
                    key: "PROWLARR_0_POSTGRES_PASSWORD"
              PROWLARR__POSTGRES_USER:
                valueFrom:
                  secretKeyRef:
                    name: cluster-media-secrets
                    key: "PROWLARR_0_POSTGRES_USER"
              PROWLARR__API_KEY:
                valueFrom:
                  secretKeyRef:
                    name: cluster-media-secrets
                    key: "PROWLARR_0_API_KEY"
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 200m
                memory: 600Mi
              limits:
                memory: 1Gi
    service:
      main:
        controller: main
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        className: internal
        annotations:
          external-dns.home.arpa/enabled: "false"
          auth.home.arpa/enabled: "true"
          hajimari.io/enable: 'true'
          hajimari.io/icon: mdi:movie-search
          hajimari.io/group: Media
        hosts:
          - host: &host "prowlarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: http
    persistence:
      config:
        enabled: true
        type: nfs
        server: ${NFS_SERVER}
        path: /volume1/apps/media
        globalMounts:
          - subPath: prowlarr
      media:
        enabled: true
        type: nfs
        server: ${NFS_SERVER}
        path: /volume1/media

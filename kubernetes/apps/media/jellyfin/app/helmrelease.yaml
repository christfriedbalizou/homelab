---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: jellyfin
  namespace: media
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      jellyfin:
        pod:
          priorityClassName: "high-priority"
          securityContext:
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            seccompProfile: { type: RuntimeDefault }
            supplementalGroups:
              - 44 # video
              - 109 # render
              - 568
        containers:
          app:
            image:
              repository: jellyfin/jellyfin
              tag: 10.11.0@sha256:59417f441213e236a9f907d4e71a13472042409d85f9e9310dbdd87ee33d7bd4
            env:
              DOTNET_SYSTEM_IO_DISABLEFILELOCKING: "true"
              JELLYFIN_FFmpeg__probesize: 50000000
              JELLYFIN_FFmpeg__analyzeduration: 50000000
              JELLYFIN_PublishedServerUrl: https://jellyfin.${SECRET_DOMAIN}
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            probes:
              liveness: &probes
                enabled: false
              readiness: *probes
              startup: *probes
            resources:
              requests:
                cpu: 100m
                memory: 8Gi
              limits:
                memory: 16Gi
    service:
      app:
        controller: jellyfin
        type: LoadBalancer
        annotations:
          lbipam.cilium.io/ips: "${JELLYFIN_IP}"
        ports:
          http:
            port: 8096
    ingress:
      app:
        className: external
        annotations:
          external-dns.home.arpa/enabled: "true"
          hajimari.io/enable: 'true'
          hajimari.io/icon: simple-icons:jellyfin
          hajimari.io/group: Media
        hosts:
          - host: &host jellyfin.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        enabled: true
        type: nfs
        server: ${NFS_SERVER}
        path: /volume1/apps/media
        globalMounts:
          - subPath: jellyfin
      media:
        enabled: true
        type: nfs
        server: ${NFS_SERVER}
        path: /volume1/media
        globalMounts:
          - path: /media
            readOnly: true
      tmpfs:
        type: emptyDir
        advancedMounts:
          jellyfin:
            app:
              - path: /cache
                subPath: cache
              - path: /config/log
                subPath: log
              - path: /transcode
                subPath: transcode
              - path: /tmp
                subPath: tmp
      dri:
        type: hostPath
        hostPath: /dev/dri
        globalMounts:
          - path: /dev/dri
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/hostname
                  operator: In
                  values:
                    - k8s-3
                    - k8s-4

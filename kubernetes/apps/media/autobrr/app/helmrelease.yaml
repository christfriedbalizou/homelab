---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: autobrr
  namespace: media
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      autobrr:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 568
            seccompProfile: { type: RuntimeDefault }
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17
            env:
              INIT_POSTGRES_DBNAME: &dbName autobrr
              INIT_POSTGRES_HOST: &postgres postgres-lb.storage.svc.cluster.local
              INIT_POSTGRES_USER: &dbUser
                valueFrom:
                  secretKeyRef:
                    name: cluster-media-secrets
                    key: "AUTOBRR_0_POSTGRES_USER"
              INIT_POSTGRES_PASS: &dbPass
                valueFrom:
                  secretKeyRef:
                    name: cluster-media-secrets
                    key: "AUTOBRR_0_POSTGRES_PASSWORD"
              INIT_POSTGRES_SUPER_PASS: "${POSTGRES_SUPER_PASS}"
        containers:
          app:
            image:
              repository: ghcr.io/autobrr/autobrr
              tag: v1.65.0@sha256:494e821e7a9c9a1279d1541522a65ed06b03d0b66563e827e3d29b9a63e61ddc
            env:
              AUTOBRR__CHECK_FOR_UPDATES: "false"
              AUTOBRR__HOST: 0.0.0.0
              AUTOBRR__LOG_LEVEL: INFO
              AUTOBRR__DATABASE_TYPE: postgres
              AUTOBRR__POSTGRES_HOST: *postgres
              AUTOBRR__POSTGRES_DATABASE: *dbName
              AUTOBRR__POSTGRES_USER: *dbUser
              AUTOBRR__POSTGRES_PASS: *dbPass
              AUTOBRR__POSTGRES_PORT: "5432"
              AUTOBRR__SESSION_SECRET:
                valueFrom:
                  secretKeyRef:
                    name: cluster-media-secrets
                    key: "AUTOBRR_0_API_KEY"
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/healthz/liveness
                    port: &port 7474
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 256Mi
    service:
      app:
        controller: autobrr
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        annotations:
          external-dns.home.arpa/enabled: "false"
          auth.home.arpa/enabled: "true"
          hajimari.io/enable: 'true'
          hajimari.io/icon: mdi:rabbit
          hajimari.io/group: Media
        hosts:
          - host: &host autobrr.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      tmp:
        type: emptyDir

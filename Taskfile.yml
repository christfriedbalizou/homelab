---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

set: [pipefail]
shopt: [globstar]

vars:
  BOOTSTRAP_DIR: '{{.ROOT_DIR}}/bootstrap'
  KUBERNETES_DIR: '{{.ROOT_DIR}}/kubernetes'
  SCRIPTS_DIR: '{{.ROOT_DIR}}/scripts'
  TALOS_DIR: '{{.ROOT_DIR}}/talos'
  TALOSCONFIG: '{{.ROOT_DIR}}/talos/clusterconfig/talosconfig'
  ANSIBLE_DIR: '{{.ROOT_DIR}}/ansible'

env:
  KUBECONFIG: '{{.ROOT_DIR}}/kubeconfig'
  SOPS_AGE_KEY_FILE: '{{.ROOT_DIR}}/age.key'
  TALOSCONFIG: '{{.TALOSCONFIG}}'
  PATH: '{{.ROOT_DIR}}/.venv/bin:$PATH'
  VIRTUAL_ENV: '{{.ROOT_DIR}}/.venv'
  ANSIBLE_COLLECTIONS_PATH: '{{.ROOT_DIR}}/.venv/galaxy'
  ANSIBLE_ROLES_PATH: '{{.ROOT_DIR}}/.venv/galaxy/ansible_roles:{{.ROOT_DIR}}/ansible/roles'
  ANSIBLE_VARS_ENABLED: 'host_group_vars,community.sops.sops'
  K8S_AUTH_KUBECONFIG: '{{.ROOT_DIR}}/kubeconfig'

includes:
  bootstrap: .taskfiles/bootstrap
  talos: .taskfiles/talos
  template: .taskfiles/template
  cluster: .taskfiles/cluster
  pihole: .taskfiles/pihole

tasks:

  default: task --list

  deps:
    desc: Create a Python virtual env and install required packages
    summary: task {{.TASK}}
    cmds:
      - '{{.PYTHON_BIN}} -m venv {{.ROOT_DIR}}/.venv'
      - .venv/bin/python3 -m pip install --upgrade pip setuptools wheel
      - .venv/bin/python3 -m pip install --upgrade --requirement '{{.ROOT_DIR}}/requirements.txt'
      - .venv/bin/ansible-galaxy install --role-file '{{.ROOT_DIR}}/requirements.yaml' --force

  configure:
    desc: Configure repository from Ansible vars
    summary: task {{.TASK}}
    dir: '{{.BOOTSTRAP_DIR}}'
    cmd: ansible-playbook configure.yaml
    env:
      ANSIBLE_DISPLAY_SKIPPED_HOSTS: 'false'

  reconcile:
    desc: Force Flux to pull in changes from your Git repository
    cmd: flux --namespace flux-system reconcile kustomization flux-system --with-source
    preconditions:
      - test -f {{.KUBECONFIG}}
      - which flux
